Опитувальник з теми Java, ООП, ООД, SOLID, DRY, KISS, YAGNI

Java та ООП

1.	Що таке об'єктно-орієнтоване програмування (ООП)?
o	a) Методика розробки програмного забезпечення, яка використовує модулі.
o	b) Парадигма програмування, яка використовує об'єкти та класи.
o	c) Спосіб управління проектами.
o	d) Методика розробки баз даних.

2.	Назвіть чотири основні принципи ООП.
o	a) Інкапсуляція, Наслідування, Поліморфізм, Агрегація.
o	b) Інкапсуляція, Наслідування, Поліморфізм, Абстракція.
o	c) Інкапсуляція, Композиція, Поліморфізм, Наслідування.
o	d) Інкапсуляція, Інтерфейси, Поліморфізм, Наслідування.

3.	Що таке інкапсуляція?
o	a) Механізм приховування деталей реалізації об'єкта.
o	b) Спосіб створення об'єктів.
o	c) Процес створення нових класів на основі існуючих.
o	d) Механізм перевантаження методів.

4.	Що таке поліморфізм?
o	a) Здатність об'єкта приймати різні форми.
o	b) Здатність методу викликати себе рекурсивно.
o	c) Здатність програми виконуватися на різних платформах.
o	d) Процес створення об'єктів з існуючих класів.

ООД та SOLID

5.	Що таке об'єктно-орієнтоване проектування (ООД)?
o	a) Методика розробки баз даних.
o	b) Підхід до проектування систем, який використовує концепції ООП.
o	c) Спосіб управління проектами.
o	d) Методика розробки інтерфейсів.

6.	Що означає принцип Single Responsibility (SRP) з SOLID?
o	a) Клас повинен мати одну відповідальність.
o	b) Клас повинен мати кілька відповідальностей.
o	c) Клас не повинен мати жодної відповідальності.
o	d) Клас може мати одну або кілька відповідальностей.

7.	Що означає принцип Open/Closed (OCP) з SOLID?
o	a) Класи повинні бути відкритими для модифікацій, але закритими для розширення.
o	b) Класи повинні бути закритими для модифікацій, але відкритими для розширення.
o	c) Класи повинні бути закритими для модифікацій і розширення.
o	d) Класи повинні бути відкритими для модифікацій і розширення.

8.	Що означає принцип Liskov Substitution (LSP) з SOLID?
o	a) Підкласи повинні бути взаємозамінними з базовими класами.
o	b) Підкласи повинні мати більше методів, ніж базові класи.
o	c) Підкласи повинні мати менше методів, ніж базові класи.
o	d) Підкласи повинні бути взаємозамінними з іншими підкласами.

9.	Що означає принцип Interface Segregation (ISP) з SOLID?
o	a) Інтерфейси повинні бути великими і об'єднувати кілька функцій.
o	b) Інтерфейси повинні бути маленькими і специфічними для окремих дій.
o	c) Інтерфейси не повинні використовуватися в програмах.
o	d) Інтерфейси повинні містити тільки один метод.

10.	Що означає принцип Dependency Inversion (DIP) з SOLID?
o	a) Модулі верхнього рівня не повинні залежати від модулів нижнього рівня.
o	b) Модулі нижнього рівня повинні залежати від модулів верхнього рівня.
o	c) Обидва типи модулів можуть залежати один від одного.
o	d) Модулі повинні бути ізольованими і не залежати один від одного.

DRY, KISS, YAGNI

11.	Що означає принцип DRY?
o	a) Кожна частина коду повинна бути унікальною.
o	b) Кожна частина коду повинна бути повторюваною.
o	c) Не повторюйте себе.
o	d) Кожен клас повинен мати одну відповідальність.

12.	Що означає принцип KISS?
o	a) Тримай це простим і зрозумілим.
o	b) Тримай це коротким і простим.
o	c) Тримай це структурованим і специфічним.
o	d) Тримай це складним і специфічним.

13.	Що означає принцип YAGNI?
o	a) Вам це знадобиться.
o	b) Вам це не знадобиться.
o	c) Використовуйте це у випадку необхідності.
o	d) Використовуйте це завжди.

14.	Яка основна мета принципу DRY?
o	a) Уникнути дублювання коду.
o	b) Покращити продуктивність.
o	c) Спрощення структури коду.
o	d) Зменшити розмір коду.

15.	Чому принцип KISS важливий у розробці програмного забезпечення?
o	a) Він дозволяє створювати складні рішення.
o	b) Він забезпечує простоту і легкість у розумінні коду.
o	c) Він збільшує кількість функцій.
o	d) Він зменшує кількість тестів.

Відповіді:
1.	b
2.	b
3.	a
4.	a
5.	b
6.	a
7.	b
8.	a
9.	b
10.	a
11.	c
12.	a
13.	b
14.	a
15.	b

